'''
===NumPy Basics(2)===

===乱数===
・random.randint(下限, 上限, サイズ): 下限以上で上限未満の整数乱数
・random.choice(リスト, サイズ, replace=True): リストから等確率で選択
・random.permutation(リスト): リストの順番をランダムにした新しいリスト
・random.shuffle(リスト): リストの順番をランダムに変更
'''
import numpy as np

# randint
a = np.random.randint(0, 3, 5) # [0, 2, 2, 0, 1, 1] ０〜２の乱数
b = np.random.randint(0, 3, (2,3)) # [[1, 1, 2], [0, 2, 1]]

# choice
lst = ['A','B','C']
c = np.random.choice(lst, 3) # ['C','B','C']
d = np.random.choice(lst, 3, replace=False) # ['A','C','B'] 重複なし

# permutation
e = np.random.permutation(lst) # ['C' 'A' 'B']　非破壊的

# shuffle
np.random.shuffle(lst) # ['C' 'A' 'B'] 破壊的

'''
===乱数の再現性===
・random.seed(num) シード設定
'''

for _ in range(3):
    np.random.seed(0)
    print(np.random.randint(0, 10, 5)) 

# [5 0 3 3 7]
# [5 0 3 3 7]
# [5 0 3 3 7]

'''
===インデックス===
np.arange(6)で[0,1,2,3,4,5]という配列ができる
reshape(2, -1)で[[0,1,2], [3,4,5]]の(2,3)の配列になる
-1は「他の次元のサイズから自動で計算せよ」という意味になる。
この場合は、3（= 6 / 2）を指定したのと同じになる。
'''

a = np.arange(6).reshape(2, -1) # [[0,1,2], [3,4,5]]

# スライスでインデックス
a[:, 0] # [0,3]
a[:, 1] # [1,4]
a[:, :2] # [[0,1], [3,4]]

'''
===ビューとコピー===
ndarray.copy() 配列を新たに生成
'''

a = np.arange(6).reshape(2,3) # [[0,1,2],[3,4,5]]

# viewにaのビューが代入される
view = a[:,:2] # [[0,1],[3,4]]

'''ビューの内容を変更すると本体の内容も変更される'''
view[0,1] = 10 # [[0,10],[3,4]]　ここでaの内容も変わる
a # [[0,10,2],[3,4,5]]

'''aをコピーしてcopyに代入'''
copy = a[:,:2].copy() # [[0,10],[3,4]]

'''前の動きとは違ってコピーして内容の変更は本体は変更されない'''
copy[0,1] = 100 # [[0,100],[3,4]]
a # [[0,10],[3,4]]


'''
===ファンシーインデックス参照===
'''

a = np.arange(12).reshape((4, -1))

'''
[ 0,  1,  2],
[ 3,  4,  5],
[ 6,  7,  8],
[ 9, 10, 11]]
'''

# 行をファンシーインデックス参照
a[[1,3]]
'''
[[ 3,  4,  5],
[ 9, 10, 11]]
'''

# 列をファンシーインデックス参照
a[:, [0, 2]]
'''
[[ 0,  2],
[ 3,  5],
[ 6,  8],
[ 9, 11]]
'''

# 指定した順番通りに取得
a[:, [2, 0]]
'''
[[ 2,  0],
[ 5,  3],
[ 8,  6],
[11,  9]]
'''

# インデックスはダブってもよい
# 3列目を2回取得
a[:,[2,0,2]]
'''
[[ 2,  0,  2],
[ 5,  3,  5],
[ 8,  6,  8],
[11,  9, 11]]
'''

# 両方リストを指定すると、要素ごとになります
# [data[1, 0], data[3, 2]] と同じ
a[[1,3],[0,2]]
'''
[3, 11]
'''


'''
===ブールインデックス参照===
'''

a[[False, True, False, True]] # a[[1,3]]と同じ
'''
[[ 3,  4,  5],
[ 9, 10, 11]]
'''

a[:, [True,False, True]] # a[:, [0, 2]]と同じ
'''
[[ 0,  2],
[ 3,  5],
[ 6,  8],
[ 9, 11]]
'''
